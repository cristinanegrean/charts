apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    app: stackdriver-exporter
    release: "{{ .Release.Name }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: stackdriver-exporter
      release: "{{ .Release.Name }}"
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.replicaCount }}
      maxUnavailable: 0
    type: {{ .Values.updateStrategy }}
  template:
    metadata:
      labels:
        app: stackdriver-exporter
        release:  "{{ .Release.Name }}"
    spec:
      restartPolicy: {{ .Values.restartPolicy }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["stackdriver_exporter"]
          envFrom:
            - configMapRef:
                name: stackdriver-exporter-config
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi
          ports:
            - containerPort: {{ .Values.service.httpPort }}
              name: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 10
